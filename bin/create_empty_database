#!/bin/sh

# This script must be run as oracle user

#set -x
set -u
set -e

this="$(basename $0)"
Bin=$(dirname $(readlink -f $0))

if [[ -f "${Bin}/oprdb_functions.sh" ]]; then
  source "${Bin}/oprdb_functions.sh"
else
  echo "FATAL: ${Bin}/oprdb_functions.sh not found. Exiting..."
fi

if [[ "$USER" != "oracle" ]]; then
  errexit "This script must be run as the oracle user."
fi


if [[ ! "$1" =~ userdb|acctdb|appdb ]]; then
  echo "Usage: $this [userdb|acctdb|appdb]"
  exit 1
fi

ORACLE_SID=$1
DB_DOMAIN=$2
SYS_PASSWORD=$3
DBCA_TEMPLATE=$4
export ORACLE_SID
PATH=$ORACLE_HOME/bin:$PATH
export PATH

if [[ "$(find /u02/oradata/${ORACLE_SID}/ -maxdepth 1 -name '*.dbf')" ]]; then
  errexit "dbf files exist in /u02/oradata/${ORACLE_SID}. Perhaps you need to drop an exsiting database?";
fi

set -x
dbca -silent -createDatabase \
  -gdbname "${ORACLE_SID}.${DB_DOMAIN}" \
  -sid "${ORACLE_SID}" \
  -templateName "${DBCA_TEMPLATE}" \
  -sysPassword "${SYS_PASSWORD}" \
  -systemPassword "${SYS_PASSWORD}" \
  -recoveryAreaDestination "/u02/flash_recovery_area" \
  -automaticMemoryManagement "true"

# ensure LDAP is not used for name lookup
sed -i '/NAMES.DIRECTORY_PATH=/c\NAMES.DIRECTORY_PATH=(TNSNAMES)' "${ORACLE_HOME}/network/admin/sqlnet.ora"

if [[ ! -f  "${ORACLE_HOME}/network/admin/tnsnames.ora" ]] || ! grep -iL "${ORACLE_SID}.${DB_DOMAIN}" "${ORACLE_HOME}/network/admin/tnsnames.ora"; then
echo "updating ${ORACLE_HOME}/network/admin/tnsnames.ora"
cat >> ${ORACLE_HOME}/network/admin/tnsnames.ora <<EOF
${ORACLE_SID}=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=${ORACLE_SID}.${DB_DOMAIN})))
EOF
fi

sqlplus -S -L system/${SYS_PASSWORD} <<EOF
WHENEVER OSERROR EXIT FAILURE
@"${OPR_HOME}/lib/sql/dbsetup/dbcreate.sql" "${OPR_HOME}/lib/sql/dbsetup" "${ORACLE_SID}"
EOF
