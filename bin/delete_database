#!/bin/bash

# This must be run as oracle user
if [[ "$USER" != "oracle" ]]; then
  errexit "This script must be run as the oracle user."
fi

if [[ ! "$1" =~ userdb|appdb ]]; then
  echo "Usage: $this [userdb|appdb]"
  exit 1
fi

ORACLE_SID=$1
ORACLE_SID_UC="$(echo $ORACLE_SID | tr '[:lower:]' '[:upper:]')"
PATH=$ORACLE_HOME/bin:$PATH
export ORACLE_SID
export PATH

dbca -silent -deleteDatabase -sourceDB "${ORACLE_SID}"

# brute force cleanup in case dbca fails
# and also files dbca does not cleanup
rm -f /u02/oradata/"${ORACLE_SID}"/*{.log,.dbf,.ctl}
rm -f ${ORACLE_HOME}/dbs/*"${ORACLE_SID}"* 
rm -f ${ORACLE_HOME}/dbs/"lk${ORACLE_SID_UC}" 
rm -rf /u01/app/oracle/diag/rdbms/"${ORACLE_SID}"
rm -rf "/u01/app/oracle/admin/${ORACLE_SID}"
rm -rf "${ORACLE_HOME}/localhost_${ORACLE_SID}"
rm -f "${ORACLE_HOME}/rdbms/audit/${ORACLE_SID}"*.aud
rm -rf "/u01/app/oracle/cfgtoollogs/emca/${ORACLE_SID}"
rm -rf "/u01/app/oracle/cfgtoollogs/dbca/${ORACLE_SID}"*
rm -rf "${ORACLE_HOME}/oc4j/j2ee/OC4J_DBConsole_localhost_${ORACLE_SID}/"
rm -f "/dev/shm/ora_${ORACLE_SID}_"*

set -x
pkill -9 -U oracle -f "[o]ra.*${ORACLE_SID}'"

# dbca complains /u01/oradata/userdb/control01.ctl exists
# (even when it does not) if there's an entry in tnsnames.ora.
sed -i "/${ORACLE_SID}=/d" "${ORACLE_HOME}/network/admin/tnsnames.ora"

# Ensure no entry in oratab, or else:
# The Oracle system identifier(SID) ... already exists. Specify another SID.
ed -s /etc/oratab <<EOF
/${ORACLE_SID}/
d
w
q
EOF

lsnrctl restart

